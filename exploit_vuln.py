import subprocess


def run_netdiscover(interface=None, ip=None):
    # read_interfaces using sudo ifconfig
    if interface is None and ip is None:
        interfaces = subprocess.check_output("ifconfig", shell=True).decode()
        # show only the interface that is up andd has an ip address
        interfaces = interfaces.split("\n\n")
        up_interfaces = []
        for interface in interfaces:
            if interface.find("UP") != -1 and interface.find("inet") != -1:
                up_interfaces.append(interface)

        # print the interfaces
        print("Available interfaces:")
        for i, interface in enumerate(up_interfaces):
            print(f"{i + 1}. {interface.split()[0]}")
        
        # choose the interface
        interface_index = int(input("Choose the interface: ")) - 1
        interface_name = up_interfaces[interface_index].split()[0]
        ip_address = up_interfaces[interface_index].split()[1]
    else:
        interface_name = interface
        ip_address = ip

        
    
    # run netdiscover
    network_address = ".".join(ip_address.split(".")[:-1])
    netdiscover_command = f"netdiscover -i {interface_name} -r {network_address}.0/24"
    netdiscover_output = subprocess.check_output(netdiscover_command, shell=True)
    print(netdiscover_output.decode())


def run_nmap(ip_address):
    # Run nmap command to scan for open ports
    nmap_command = f"nmap {ip_address}"
    nmap_output = subprocess.check_output(nmap_command, shell=True)
    print(nmap_output.decode())

def searchsploit_vulnerabilities(service_name):
    # Run searchsploit command to search for vulnerabilities
    searchsploit_command = f"searchsploit {service_name}"
    searchsploit_output = subprocess.check_output(searchsploit_command, shell=True)
    print(searchsploit_output.decode())


# Example usage
# auto search exploit every service from nmap scans
# run netdiscover to get the ip address
